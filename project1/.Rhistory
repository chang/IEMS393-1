install.package("ggplot2")
install.packages("ggplot2")
require(ggplot2)
data("diamonds")
ls
diamonds
require(ggplot2)
ggplot(data = diamonds) + geom_point(aes(x, y))
require(ggplot2)
data("diamonds")
diamonds
ls
View(diamonds)
dat=data.frame(profit7day=c(2.7776,2.5454,1.1664,2.1411,.5970,2.6345,1.2384,
1.0394,.9330,.4823,.1596,-2.4010,1.4813,1.1089,1.1823,2.0546,.5215,.6563,
-.5591,-.4029,-.5188,.7485,.5824,-2.4411,1.6853,.4154,1.8107,1.2306,-.0813,
1.0193,1.9127,2.7837,.4296,.2372,1.4939,-.3119,.1670,.5903,2.7329,-.7007,
.6123,1.5989,-2.1543,2.0984,-.8110,-.3124,1.2553,-.0235,-.5343,-.2725,.5853,
.1965,.9929,2.4430,1.8916,.5003,2.1133,-.8860,-.8616,1.7766,.0138,-1.3276,
.4816,.2515))
dat$profit=c(4.4822,4.2773,3.4813,3.4185,1.8750,5.7309,2.7941,2.6645,2.4829,
3.5426,1.9242,-.6713,4.0521,3.3701,3.1614,5.6704,2.5177,3.1602,.8949,.1892,
1.2428,2.6653,3.2339,-.3623,3.2458,3.0335,3.2677,2.9952,3.2775,3.1474,4.3148,
4.3769,1.8173,1.9714,4.7995,1.6541,1.4544,2.8644,5.4814,.6984,1.0595,3.2055,
.1911,3.8816,.8538,1.3474,4.9605,1.6176,1.7431,1.5614,2.2959,2.1481,1.8159,
4.2331,3.8737,1.9046,2.9773,.3779,1.1765,3.6206,1.6754,.1498,3.4730,3.1940)
dat
str(dat)
lm(profit ~ profit7day, data=dat)
dat_fit <- lm(profit ~ profit7day, data=dat)
dat_fit %>% summary()
require(magrittr)
dat_fit %>% summary()
require(ggplot2)
ggplot(data=dat) + geom_point(aes(x=profit7day, y=profit))
predict(dat_fit, dat$profit7day)
predict(dat$profit7day, dat_fit)
predict(data.frame(dat$profit7day), dat_fit)
predict(dat_fit, data.frame(dat$profit7day))
predict(dat_fit, dat)
dat$predicted <- predict(dat_fit, dat)
View(dat)
dat$residual <- abs(dat$predicted - dat$profit)
dat$predicted > 0
dat$is_predicted <- dat$predicted > 0
require(dplyr)
dat <- select(dat, -is_predicted)
dat$predicted_negative <- dat$predicted > 0
dat$predicted_negative <- dat$predicted < 0
dat$actually_positive <- dat$profit > 0
table(dat$predicted_negative & dat$actually_positive)
ls
help(ls)
ls()
l()
dat <- data('diamonds')
require(ggplot2)
require(dplyr)
dat <- data('diamonds')
str(dat)
list.files()
sqrt(4)
?sqrt()
sqrt(y=1)
sqrt(x <- 1)
dat
data('diamonds')
require(ggplot2)
data('diamonds')
diamonds
require(ggplot2)
data("diamonds")
diamonds
ggplot(data=diamonds) + stat_count(aes(x=cut))
list.files()
require(dplyr)
list.files()
require(ggplot2)
require(dplyr)
require(magrittr)
require(tidyr)
d <- read.csv("callcenter_data_updated.csv")
d <- gather(d, Country, callers, count_US:count_China)
View(d)
table(d$Country)
table(d$Country) / 24
table(d$Country) / 365
1277/7
ggplot(data = d) + geom_point(aes(x = HOUR, y = callers), alpha = .2)
group_by(d, Country, HOUR, calers) %>% summarise(callers_per_hour = mean(callers)
group_by(d, Country, HOUR, calers) %>% summarise(callers_per_hour = mean(callers))
```{r}
ggplot(data=d) + geom_histogram(aes(x=callers))
ggplot(data=d) + geom_histogram(aes(x=callers), binwidth=2)
ggplot(data=d) + geom_histogram(aes(x=callers), binwidth=2) + facet_grid(. ~ HOUR)
ggplot(data=d) + geom_histogram(aes(x=callers), binwidth=2)
ggplot(data=d) + geom_histogram(aes(x=callers, fill=DAY), binwidth=2)
ggplot(data=d) + geom_histogram(aes(x=callers, fill=HOUR), binwidth=2)
ggplot(data=d) + geom_histogram(aes(x=callers, fill=as.factor(HOUR)), binwidth=2)
d
View(d)
str(d)
require(ggplot2)
require(dplyr)
require(magrittr)
require(tidyr)
d <- read.csv("callcenter_data_updated.csv")
d <- d %>%
gather(Country, callers, count_US:count_China) %>%
rename(DATE..MM.DD.YYYY = DATE) %>%
mutate(DATE = as.Date(as.character(DATE), format = "%m/%/d/%Y"))
require(ggplot2)
require(dplyr)
require(magrittr)
require(tidyr)
d <- read.csv("callcenter_data_updated.csv")
d <- d %>%
gather(Country, callers, count_US:count_China) %>%
rename(DATE = DATE..MM.DD.YYYY) %>%
mutate(DATE = as.Date(as.character(DATE), format = "%m/%/d/%Y"))
# Synchronize time offset
str(d)
d$DATE
?as.Date
require(ggplot2)
require(dplyr)
require(magrittr)
require(tidyr)
d <- read.csv("callcenter_data_updated.csv")
d <- d %>%
gather(Country, callers, count_US:count_China) %>%
rename(DATE = DATE..MM.DD.YYYY) %>%
mutate(DATE = as.Date(as.character(DATE), format = "%m/%d/%Y"))
# Synchronize time offset
str(d)
ames9d
names(d)
require(lubridate)
install.packages("lubridate")
require(lubridate)
?lubridate
str(d)
is.Date(d)
is.Date(d$DATE)
require(lubridate)
hour(d$DATE)
head(d$DATE)
day(d$DATE)
?lubridate::year()
?lubridate::year
require(ggplot2)
require(dplyr)
require(magrittr)
require(tidyr)
require(lubridate)
d <- read.csv("callcenter_data_updated.csv")
getwd()
setwd("/home/eric/Documents/IEMS393-1/project1
")
setwd("/home/eric/Documents/IEMS393-1/project1")
require(ggplot2)
require(dplyr)
require(magrittr)
require(tidyr)
require(lubridate)
d <- read.csv("callcenter_data_updated.csv")
# reshape countries to long form, format dates
d <- d %>%
gather(Country, callers, count_US:count_China) %>%
rename(DATE = DATE..MM.DD.YYYY) %>%
mutate(DATE = as.Date(as.character(DATE), format = "%m/%d/%Y")) %>%
mutate(month = lubridate::month(DATE),
day = lubridate::day(DATE),
year = lubridate::year(DATE))
str(d)
table(d$day)
table(d$month)
require(ggplot2)
require(dplyr)
require(magrittr)
require(tidyr)
require(lubridate)
d <- read.csv("callcenter_data_updated.csv")
# reshape countries to long form, format dates
d <- d %>%
gather(Country, callers, count_US:count_China) %>%
rename(DATE = DATE..MM.DD.YYYY) %>%
mutate(DATE = as.Date(as.character(DATE), format = "%m/%d/%Y")) %>%
mutate(month = lubridate::month(DATE),
day = lubridate::day(DATE),
year = lubridate::year(DATE))
str(d)
ggplot(data = d) + geom_point(aes(x=day, y=callers))
str(d)
ggplot(data = d) + geom_point(aes(x=DATE, y=callers))
data("diamonds")
